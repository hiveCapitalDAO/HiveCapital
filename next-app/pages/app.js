import React, { useState } from 'react'
import styled from '@emotion/styled'
import Image from 'next/image'
import Head from 'next/head'
import { API_URL } from '../config'
import Link from 'next/link'

export async function getStaticProps() {
  const response = await fetch(
    `${API_URL}api/blockfrost/accounts/stake1u8axckdg7yupv2jx00yleddz2ntv52r402h75hjsp9vzw3sau2hzu/addresses/assets`,
  )
  const data = await response.json()

  var assetData = []
  for (var asset of data) {
    var assetMetadata = await fetch(
      `${API_URL}/api/blockfrost/assets/${asset.unit}`,
    )
    assetMetadata = await assetMetadata.json()
    assetData.push(assetMetadata)
  }

  return {
    props: {
      assets: assetData,
    },
  }
}

function App({ assets }) {
  const [selectedTab, setSelectedTab] = useState(1)

  return (
    <Container>
      <Head>
        <title>Hive Capital</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
        <meta
          name="theme-color"
          content="#222222"
          media="(prefers-color-scheme: dark)"
        />
      </Head>
      <ContentContainer>
        {selectedTab === 1 && (
          <>
            <Card>
              <TokenTitle>Tokens</TokenTitle>
              <TokensContainer>
                <TokenContent>No Tokens Yet. Get to Work!</TokenContent>
              </TokensContainer>
            </Card>
            <Card>
              <TokenTitle>NFTs</TokenTitle>
              <NFTsContainer>
                {assets.map((asset) => {
                  return (
                    <NFTContainer key={asset.asset}>
                      <NFTImageContainer>
                        <Image
                          src={`https://ipfs.io/ipfs/${
                            asset.onchain_metadata.image.split('/')[2]
                          }`}
                          layout="fill"
                          alt="nft-image"
                        />
                      </NFTImageContainer>
                      <NFTTitle>{asset.onchain_metadata.name}</NFTTitle>
                    </NFTContainer>
                  )
                })}
              </NFTsContainer>
            </Card>
          </>
        )}
        {selectedTab === 2 && <Card></Card>}
      </ContentContainer>

      <BottomNav>
        <Link href="/">
          <HCLogoContainer>
            <HCImageLogo src="/hcIcon.png" layout="fill" />
          </HCLogoContainer>
        </Link>

        <IconContainer onClick={() => setSelectedTab(1)}>
          <ImageContainer>
            {selectedTab === 1 ? (
              <Icon
                src="/portfolioIcon.png"
                layout="fill"
                style={{ objectFit: 'cointain', width: '100%' }}
                alt="icon-image"
              />
            ) : (
              <Icon
                src="/navIcons/clearPortfolio.PNG"
                layout="fill"
                style={{ objectFit: 'cointain', width: '100%' }}
                alt="icon-image"
              />
            )}
          </ImageContainer>

          <NavWords>Portfolio</NavWords>
        </IconContainer>
        <IconContainer onClick={() => setSelectedTab(2)}>
          <ImageContainer>
            {selectedTab === 2 ? (
              <Image
                src="/townhallLogo.png"
                layout="fill"
                style={{ objectFit: 'cointain', width: '100%' }}
                alt="icon-image"
              />
            ) : (
              <Image
                src="/navIcons/clearTownhall.PNG"
                layout="fill"
                style={{ objectFit: 'cointain', width: '100%' }}
                alt="icon-image"
              />
            )}
          </ImageContainer>

          <NavWords>Townhall</NavWords>
        </IconContainer>
        <IconContainer onClick={() => setSelectedTab(3)}>
          <ImageContainer>
            {selectedTab === 3 ? (
              <Image
                src="/profileLogo.png"
                layout="fill"
                style={{ objectFit: 'cointain', width: '100%' }}
                alt="icon-image"
              />
            ) : (
              <Image
                src="/navIcons/clearProfile.PNG"
                layout="fill"
                style={{ objectFit: 'cointain', width: '100%' }}
                alt="icon-image"
              />
            )}
          </ImageContainer>
          <NavWords>Profile</NavWords>
        </IconContainer>
      </BottomNav>
    </Container>
  )
}

export default App

const Container = styled.div`
  height: 100vh;
  width: 100vw;
  background-color: black;
  display: flex;
  flex-direction: column;

  @media screen and (min-width: 900px) {
    flex-direction: row-reverse;
  }
`

const HCLogoContainer = styled.div`
  height: 100px;
  width: 100px;
  position: relative;
  display: none;
  margin-top: 40px;
  margin-bottom: 40px;

  &:hover {
    cursor: pointer;
  }

  @media screen and (min-width: 900px) {
    display: flex;
    /* width: 100%; */
  }
`

const HCImageLogo = styled(Image)`
  object-fit: contain;
  width: 100%;
  height: 100%;
  display: none;

  @media screen and (min-width: 900px) {
    display: flex;
  }
`

const ContentContainer = styled.div`
  color: white;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow-y: scroll;
`

const Card = styled.div`
  background-color: #141414;
  width: 85%;
  height: auto;
  border-radius: 12px;
  margin-top: 40px;
  margin-bottom: 40px;

  @media screen and (min-width: 768px) {
    padding: 20px;
  }
`

const TokenTitle = styled.div`
  /* height: 10%; */
  padding-top: 10px;
  padding-left: 40px;
  padding-bottom: 10px;

  font-family: 'Inter';
  font-style: normal;
  font-weight: 700;
  font-size: 27px;
  line-height: 33px;

  color: #ffffff;
`

const TokensContainer = styled.div`
  border-radius: 12px;
  width: 100%;
  /* height: 70%; */
  display: flex;
  align-items: center;
  justify-content: center;
`

const TokenContent = styled.div`
  padding: 20px;
  width: 80%;
  height: 80%;
  background-color: #252525;
  border-radius: 12px;
  margin-bottom: 40px;
`

const BottomNav = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-around;
  /* bottom: 0;
  right: 0;
  left: 0;
  position: absolute; */
  height: 80px;

  @media screen and (min-width: 900px) {
    flex-direction: column;
    height: 100%;
    justify-content: start;
    width: 40%;
    border-right: 2px solid #4f4f4f;
  }
`

const NavItem = styled.div`
  color: white;
`

const IconContainer = styled.div`
  cursor: pointer;
  transition: all 250ms;

  @media screen and (min-width: 900px) {
    display: flex;
    align-items: center;
    width: 250px;
    height: 70px;
    justify-content: start;
    margin: 10px;
    border-radius: 50px;

    &:hover {
      background-color: #141414;
    }
  }
`

const ImageContainer = styled.div`
  height: 80px;
  width: 80px;
  position: relative;

  @media screen and (min-width: 1200px) {
    height: 100px;
    width: 100px;
  }
`

const Icon = styled(Image)`
  object-fit: contain;
  width: 100%;
`

const NavWords = styled.div`
  font-family: 'Inter';
  font-style: normal;
  font-weight: 700;
  font-size: 27px;
  line-height: 33px;
  color: #ffffff;
  display: none;

  @media screen and (min-width: 900px) {
    display: flex;
  }
`

const NFTsContainer = styled.div`
  width: 100%;
  display: grid;
  grid-template-columns: 50% 50%;
  margin-bottom: 20px;

  @media screen and (min-width: 1200px) {
    grid-template-columns: 33.3% 33.3% 33.3%;
  }
`

const NFTContainer = styled.div`
  height: 200px;
  background: #252525;
  border-radius: 23px;
  margin: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  @media screen and (min-width: 1600px) {
    height: 300px;
  }

  @media screen and (min-width: 1200px) and (max-width: 1600px) {
    height: 250px;
  }

  @media screen and (min-width: 668px) and (max-width: 1200px) {
    height: 300px;
  }

  @media screen and (min-width: 500px) and (max-width: 668px) {
    height: 225px;
  }
`

const NFTImageContainer = styled.div`
  height: 80%;
  width: 80%;
  border-radius: 12px;
  margin-top: 20px;
  overflow: hidden;

  position: relative;
`

const NFTTitle = styled.div`
  font-family: 'Inter';
  font-style: normal;
  font-weight: 700;
  font-size: 13px;
  line-height: 16px;
  padding: 10px;
  text-align: center;
  height: 25px;
  display: flex;
  align-items: center;
  justify-content: center;

  color: #ffffff;

  @media screen and (max-width: 465px) {
    height: 80px;
  }
`
